/* 网格组件 */
/*
 * @Author: EmmanuelAgui 
 * @Date: 2021-10-25
 * @Last Modified by: EmmanuelAgui 
 * @Last Modified time: 2021-10-25
 */

 /* 网格组件 */
 .grid{
     display: flex;
     flex-wrap: wrap;
     border-top: 1px solid #ddd;
 }
/* 网格中的格子 */
 .grid > .grid-item{
     position: relative;
     /* 这个格子的容器 .tt-grid 上加了 “flex-wrap: wrap;” 属性，
     然后在格子上加入 “flex: 1 1 33%;” 属性即可完成格子的排布要求，
     这里分三列所以我们选一个比 1/3 稍小的百分比，
     然后通过弹性让每行的三个格子撑满整行。 */
     flex: 0 1 33.3333%;
     /* flex-basis: 33%; */
     /* 每个格子要有边框，所以每个格子都是用 “border-box” 形式的盒模型。 */
     box-sizing: border-box;
     /* 通过垂直方向的 padding 值撑开了盒子的内容。 */
     padding: 1.2rem 0;
     text-align: center;
     border-right: 1px solid #ddd;
     border-bottom: 1px solid #ddd;
     background-color: #fff;
 }
 /* 默认是3列 */
 .grid .grid-item:nth-child(3n){
     border-right: none;
 }

/* grid内容区 */
.grid > .grid-item > .grid-icon{
    font-size: 1.5rem;
    color: #aaa;
    margin-bottom: .5rem;
}
.grid > .grid-item > .grid-label{
    font-size: .6rem;
    color: #333;
}

/* 不需要边框时，取消容器上的border */
.grid.no-border{
    border: none;
}
/* 不需要边框时取消格子上所有的边框 */
.grid.no-border > .grid-item{
    /* 选择器的优先级相同了，而 no-border 样式的语句在前面，无法覆盖后面 .tt-grid-4 里面 border 的样式。
    为了解决这个问题，我们可以在，no-border 的样式里加上 “!important” 来解决这个问题。 */
    border: none !important;
}


/* 两列网格 */
.grid.grid-2 .grid-item{
    border-right: 1px solid #ddd;
    flex-basis: 50%;
    padding: 1.8rem 0;
}
.grid.grid-2 .grid-item:nth-child(2n){
    border-right: none;
}

/* 四列网格 */
.grid.grid-4 .grid-item{
    border-right: 1px solid #ddd;
    flex-basis: 25%;
    padding: .9rem 0;
}
.grid.grid-4 .grid-item:nth-child(4n){
    border-right: none;
}
/* 5列网格 */
.grid.grid-5 .grid-item{
    border-right: 1px solid #ddd;
    flex-basis: 20%;
    padding: .6rem 0;
}
.grid.grid-5 .grid-item:nth-child(5n){
    border-right: none;
}